<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.xgit.parts.auth.account.dao.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="cn.com.xgit.parts.auth.account.dao.entity.RoleDO">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="type" jdbcType="DECIMAL" property="type" />
    <result column="channel" jdbcType="DECIMAL" property="channel" />
    <result column="SPACE_ID" jdbcType="VARCHAR" property="spaceId" />
    <result column="Dept_ID" jdbcType="VARCHAR" property="deptId" />
    <result column="seq_no" jdbcType="INTEGER" property="seqNo" />
  </resultMap>


  <resultMap id="UserRolesResultMap" type="cn.com.xgit.parts.auth.account.dao.entity.UserRoles">
    <id column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="ROLE_ID" jdbcType="VARCHAR" property="roleId" />
  </resultMap>

  <sql id="Base_Column_List">
    id, name, remark, type, channel,SPACE_ID,DEPT_ID,seq_no
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from IUS_ROLE
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="getRolesByIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from IUS_ROLE
    where id in
    <foreach collection="ids" item="id" open="(" separator=","  close=")">
      #{id,jdbcType=VARCHAR}
    </foreach>
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from IUS_ROLE
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.com.xgit.parts.auth.account.dao.entity.RoleDO">
    insert into IUS_ROLE (id, name, remark,type, channel,SPACE_ID,DEPT_ID,seq_no)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},#{type,jdbcType=DECIMAL}
    ,#{channel,jdbcType=DECIMAL}, #{spaceId,jdbcType=VARCHAR}, #{deptId,jdbcType=VARCHAR}, #{seqNo,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.xgit.parts.auth.account.dao.entity.RoleDO">
    insert into IUS_ROLE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="channel != null">
        channel,
      </if>
      <if test="spaceId != null">
        SPACE_ID,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="seqNo != null">
        seq_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=DECIMAL},
      </if>
      <if test="channel != null">
        #{channel,jdbcType=DECIMAL},
      </if>
      <if test="spaceId != null">
        #{spaceId,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="seqNo != null">
        #{seqNo,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.xgit.parts.auth.account.dao.entity.RoleDO">
    update IUS_ROLE
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=DECIMAL},
      </if>
      <if test="channel != null">
        channel = #{channel,jdbcType=DECIMAL},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=DECIMAL},
      </if>
      <if test="seqNo != null">
        seq_no =#{seqNo,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.xgit.parts.auth.account.dao.entity.RoleDO">
    update IUS_ROLE
    set name = #{name,jdbcType=VARCHAR},
    remark = #{remark,jdbcType=VARCHAR},
    type = #{type,jdbcType=DECIMAL},
    channel = #{channel,jdbcType=DECIMAL},
    seq_no =#{seqNo,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectRolesByUserId" resultType="java.lang.String">
    SELECT DISTINCT role_id FROM IUS_USER_ROLES user_roles, IUS_ROLE role
    WHERE user_roles.user_id = #{userId,jdbcType=VARCHAR}
    and user_roles.role_id = role.id
    and role.channel = #{channel,jdbcType=DECIMAL}
    and role.type = #{type,jdbcType=DECIMAL}
  </select>
  <select id="selectUserIdByRoleId" resultType="java.lang.String">
    SELECT DISTINCT user_id FROM IUS_USER_ROLES
    WHERE role_id = #{roleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteRoleUsers" parameterType="java.lang.String">
    DELETE FROM IUS_USER_ROLES WHERE role_id = #{roleId,jdbcType=VARCHAR}
  </delete>

  <select id="selectByWorkspaceId" resultType="java.lang.String">
    select id from IUS_ROLE where SPACE_ID = #{workspaceId,jdbcType=VARCHAR}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from IUS_ROLE
    where channel = #{channel,jdbcType=DECIMAL}
    <if test="type != '' and type !=null">
      and type = #{type,jdbcType=DECIMAL}
    </if>
    <if test="workspaceId != '' and workspaceId !=null">
      and SPACE_ID = #{workspaceId,jdbcType=VARCHAR}
    </if>
    order by dept_id,seq_no
  </select>


  <select id="queryRolesByDepartment" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from IUS_ROLE
    where 1=1
    and DEPT_ID = #{deptId,jdbcType=VARCHAR}
    <if test="workspaceId != '' and workspaceId !=null">
      and SPACE_ID = #{workspaceId,jdbcType=VARCHAR}
    </if>
  </select>


  <select id="countByName" resultType="Long">
    select count(1) from IUS_ROLE
    where 1 = 1
    <if test="roleId != 0">
      and id != #{roleId,jdbcType=VARCHAR}
    </if>
    and name = #{name,jdbcType=VARCHAR}
    and SPACE_ID = #{spaceId,jdbcType=VARCHAR}
    <if test="deptId != 0">
      and DEPT_ID = #{deptId,jdbcType=VARCHAR}
    </if>
  </select>
  <select id="countUserByRoleId" resultType="java.lang.Long">
    select count(*) from IUS_USER_ROLES
    where role_id = #{roleId,jdbcType=VARCHAR}
  </select>
  <select id="selectRoleIdsByUserId" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT  role_id FROM IUS_USER_ROLES WHERE user_id = #{userId,jdbcType=VARCHAR} ORDER BY ROLE_FLAG DESC
  </select>

  <select id="queryUserRolesByUserIds" resultMap="UserRolesResultMap">
    SELECT  USER_ID,ROLE_ID FROM IUS_USER_ROLES WHERE
    USER_ID
    in
    <foreach collection="userIds" item="userId" separator="," open="(" close=")">
      #{userId,jdbcType=VARCHAR}
    </foreach>
    ORDER BY ROLE_FLAG DESC
  </select>

  <select id="queryAuthIdsByRoleId" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT  AUTH_ID FROM IUS_ROLE_AUTH WHERE ROLE_ID = #{roleId,jdbcType=VARCHAR} AND STATUS = 0
  </select>

  <insert id="addUserRole" parameterType="cn.com.xgit.parts.auth.account.dao.entity.UserRoles">
    INSERT INTO IUS_USER_ROLES
    SELECT #{userId}, #{roleId} ,#{userFlag}FROM DUAL
    WHERE NOT EXISTS (
    SELECT 1 FROM IUS_USER_ROLES
    WHERE USER_ID = #{userId} AND ROLE_ID = #{roleId} and role_flag=#{userFlag})
  </insert>

  <insert id="addUserRoleRelation" >
    INSERT INTO IUS_USER_ROLES
    VALUES( #{userId}, #{roleId} ,#{userFlag})
  </insert>

  <select id="checkUserRole"  resultType="java.lang.Integer">
    SELECT count(1) FROM IUS_USER_ROLES
    WHERE USER_ID = #{userId} AND ROLE_ID =#{roleId}
  </select>

  <delete id="removeUserRole">
    delete from ius_user_roles where role_id = #{roleId,jdbcType=VARCHAR} and user_id = #{userId,jdbcType=VARCHAR}
  </delete>

  <delete id="removeRoleByUser" parameterType="java.lang.String">
    delete from ius_user_roles where user_id = #{userId,jdbcType=VARCHAR}
  </delete>

  <select id="selectRolesReferencedCount" resultType="java.lang.Integer">
    select count(*) from ius_role where dept_id = #{deptId,jdbcType=VARCHAR} and space_id = #{spaceId,jdbcType=VARCHAR}
  </select>


</mapper>
