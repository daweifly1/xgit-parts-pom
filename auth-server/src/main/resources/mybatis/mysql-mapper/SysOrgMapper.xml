<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.xgit.parts.auth.account.dao.mapper.sys.SysOrgMapper">
    <resultMap id="BaseResultMap" type="cn.com.xgit.parts.auth.account.dao.entity.sys.SysOrgDO">
            <result column="ID" property="id" jdbcType="VARCHAR"/>
            <result column="NAME" property="name" jdbcType="VARCHAR"/>
            <result column="CODE" property="code" jdbcType="VARCHAR"/>
            <result column="ERP_CODE" property="erpCode" jdbcType="VARCHAR"/>
            <result column="PARENT_ID" property="parentId" jdbcType="VARCHAR"/>
            <result column="SEQ" property="seq" jdbcType="INTEGER"/>
            <result column="LEVEL" property="level" jdbcType="DECIMAL"/>
            <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
            <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>


    <sql id="Base_Column_List">
        ID,NAME,CODE,ERP_CODE,PARENT_ID,SEQ,LEVEL,CREATE_TIME,UPDATE_TIME
    </sql>

    <sql id="cond">
        <where>
            <if test="id != null">
                and ID = #{id,jdbcType=VARCHAR}
            </if>
            <if test="name != null and name != ''">
                and  NAME =#{name,jdbcType=VARCHAR}
            </if>
            <if test="code != null and code != ''">
                and  CODE =#{code,jdbcType=VARCHAR}
            </if>
            <if test="erpCode != null and erpCode != ''">
                and  ERP_CODE =#{erpCode,jdbcType=VARCHAR}
            </if>
            <if test="parentId != null and parentId != ''">
                and  PARENT_ID =#{parentId,jdbcType=VARCHAR}
            </if>
            <if test="seq != null">
                and  SEQ =#{seq,jdbcType=INTEGER}
            </if>
            <if test="level != null">
                and  LEVEL =#{level,jdbcType=DECIMAL}
            </if>
            <if test="createTime != null">
                and  CREATE_TIME =#{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                and  UPDATE_TIME =#{updateTime,jdbcType=TIMESTAMP}
            </if>
        </where>
    </sql>

    <select id="list" parameterType="cn.com.xgit.parts.auth.module.org.vo.SysOrgVO" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from SYS_ORG
        <include refid="cond"/>
    </select>

    <select id="queryList" parameterType="cn.com.xgit.parts.auth.module.org.vo.SysOrgVO" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from SYS_ORG
        <include refid="cond"/>
    </select>

    <select id="queryListByIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from SYS_ORG
        where ID in
        <foreach collection="ids" item="id" open="(" separator=","  close=")">
         #{id,jdbcType=VARCHAR}
        </foreach>
    </select>



    <delete id="deleteByPrimaryKeySelective" parameterType="java.lang.String">
        delete from SYS_ORG where ID = #{id,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="cn.com.xgit.parts.auth.account.dao.entity.sys.SysOrgDO">
        insert into SYS_ORG (
        ID,NAME,CODE,ERP_CODE,PARENT_ID,SEQ,LEVEL,CREATE_TIME,UPDATE_TIME
        )
        values (
         #{id,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{code,jdbcType=VARCHAR},#{erpCode,jdbcType=VARCHAR},#{parentId,jdbcType=VARCHAR},
         #{seq,jdbcType=INTEGER},#{level,jdbcType=DECIMAL},#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into `SYS_ORG` (
        id,ID,NAME,CODE,ERP_CODE,PARENT_ID,SEQ,LEVEL,CREATE_TIME,UPDATE_TIME
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id,jdbcType=VARCHAR},#{item.name,jdbcType=VARCHAR},#{item.code,jdbcType=VARCHAR},#{item.erpCode,jdbcType=VARCHAR},#{item.parentId,jdbcType=VARCHAR},
                #{item.seq,jdbcType=INTEGER},#{item.level,jdbcType=DECIMAL},#{item.createTime,jdbcType=TIMESTAMP},#{item.updateTime,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>

    <update id="merge" parameterType="cn.com.xgit.parts.auth.account.dao.entity.sys.SysOrgDO">
        merge into SYS_ORG t1
        using (select #{id,jdbcType=VARCHAR} as ID from dual)tab_
        ON (t1.ID=tab_.ID)
        WHEN MATCHED THEN
        update
        <set>
            <if test="name != null">
                NAME =#{name,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                CODE =#{code,jdbcType=VARCHAR},
            </if>
            <if test="erpCode != null">
                ERP_CODE =#{erpCode,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                PARENT_ID =#{parentId,jdbcType=VARCHAR},
            </if>
            <if test="seq != null">
                SEQ =#{seq,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                LEVEL =#{level,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                CREATE_TIME =#{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME =#{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        WHEN NOT MATCHED THEN
        insert  (
        ID,NAME,CODE,ERP_CODE,PARENT_ID,SEQ,LEVEL,CREATE_TIME,UPDATE_TIME
        )
        values (
        #{id,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{code,jdbcType=VARCHAR},#{erpCode,jdbcType=VARCHAR},#{parentId,jdbcType=VARCHAR},
        #{seq,jdbcType=INTEGER},#{level,jdbcType=DECIMAL},#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP}
        )
    </update>
    <!--todo 待验证-->
    <update id="mergeMsql" parameterType="cn.com.xgit.parts.auth.account.dao.entity.sys.SysOrgDO">
        insert  (
        ID,NAME,CODE,ERP_CODE,PARENT_ID,SEQ,LEVEL,CREATE_TIME,UPDATE_TIME
        )
        values (
        #{id,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{code,jdbcType=VARCHAR},#{erpCode,jdbcType=VARCHAR},#{parentId,jdbcType=VARCHAR},
            #{seq,jdbcType=INTEGER},#{level,jdbcType=DECIMAL},#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP}
        )
        ON duplicate KEY UPDATE
        <set>
            <if test="name != null">
                NAME =#{name,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                CODE =#{code,jdbcType=VARCHAR},
            </if>
            <if test="erpCode != null">
                ERP_CODE =#{erpCode,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                PARENT_ID =#{parentId,jdbcType=VARCHAR},
            </if>
            <if test="seq != null">
                SEQ =#{seq,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                LEVEL =#{level,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                CREATE_TIME =#{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME =#{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="cn.com.xgit.parts.auth.account.dao.entity.sys.SysOrgDO">
        update SYS_ORG
        <set>
            <if test="name != null">
                NAME =#{name,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                CODE =#{code,jdbcType=VARCHAR},
            </if>
            <if test="erpCode != null">
                ERP_CODE =#{erpCode,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                PARENT_ID =#{parentId,jdbcType=VARCHAR},
            </if>
            <if test="seq != null">
                SEQ =#{seq,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                LEVEL =#{level,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                CREATE_TIME =#{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME =#{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where ID =  #{id,jdbcType=VARCHAR}
    </update>
</mapper>
