<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.xgit.parts.auth.account.dao.mapper.sys.SysOpLogMapper">
    <resultMap id="BaseResultMap" type="cn.com.xgit.parts.auth.account.dao.entity.sys.SysOpLogDO">
            <result column="USER_ID" property="userId" jdbcType="VARCHAR"/>
            <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP"/>
            <result column="REMARK" property="remark" jdbcType="VARCHAR"/>
            <result column="TYPE" property="type" jdbcType="INTEGER"/>
    </resultMap>


    <sql id="Base_Column_List">
        USER_ID,UPDATE_TIME,REMARK,TYPE
    </sql>

    <sql id="cond">
        <where>
            <if test="id != null">
                and ID = #{id,jdbcType=VARCHAR}
            </if>
            <if test="userId != null and userId != ''">
                and  USER_ID =#{userId,jdbcType=VARCHAR}
            </if>
            <if test="updateTime != null">
                and  UPDATE_TIME =#{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="remark != null and remark != ''">
                and  REMARK =#{remark,jdbcType=VARCHAR}
            </if>
            <if test="type != null">
                and  TYPE =#{type,jdbcType=INTEGER}
            </if>
        </where>
    </sql>

    <select id="list" parameterType="cn.com.xgit.parts.auth.module.log.vo.SysOpLogVO" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from SYS_OP_LOG
        <include refid="cond"/>
    </select>

    <select id="queryList" parameterType="cn.com.xgit.parts.auth.module.log.vo.SysOpLogVO" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from SYS_OP_LOG
        <include refid="cond"/>
    </select>

    <select id="queryListByIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from SYS_OP_LOG
        where ID in
        <foreach collection="ids" item="id" open="(" separator=","  close=")">
         #{id,jdbcType=VARCHAR}
        </foreach>
    </select>



    <delete id="deleteByPrimaryKeySelective" parameterType="java.lang.String">
        delete from SYS_OP_LOG where ID = #{id,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="cn.com.xgit.parts.auth.account.dao.entity.sys.SysOpLogDO">
        insert into SYS_OP_LOG (
        USER_ID,UPDATE_TIME,REMARK,TYPE
        )
        values (
         #{userId,jdbcType=VARCHAR},#{updateTime,jdbcType=TIMESTAMP},#{remark,jdbcType=VARCHAR},#{type,jdbcType=INTEGER}
        )
    </insert>

    <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into `SYS_OP_LOG` (
        id,USER_ID,UPDATE_TIME,REMARK,TYPE
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.userId,jdbcType=VARCHAR},#{item.updateTime,jdbcType=TIMESTAMP},#{item.remark,jdbcType=VARCHAR},#{item.type,jdbcType=INTEGER}
            )
        </foreach>
    </insert>

    <update id="merge" parameterType="cn.com.xgit.parts.auth.account.dao.entity.sys.SysOpLogDO">
        merge into SYS_OP_LOG t1
        using (select #{id,jdbcType=VARCHAR} as ID from dual)tab_
        ON (t1.ID=tab_.ID)
        WHEN MATCHED THEN
        update
        <set>
            <if test="userId != null">
                USER_ID =#{userId,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME =#{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                REMARK =#{remark,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                TYPE =#{type,jdbcType=INTEGER},
            </if>
        </set>
        WHEN NOT MATCHED THEN
        insert  (
        USER_ID,UPDATE_TIME,REMARK,TYPE
        )
        values (
        #{userId,jdbcType=VARCHAR},#{updateTime,jdbcType=TIMESTAMP},#{remark,jdbcType=VARCHAR},#{type,jdbcType=INTEGER}
        )
    </update>
    <!--todo 待验证-->
    <update id="mergeMsql" parameterType="cn.com.xgit.parts.auth.account.dao.entity.sys.SysOpLogDO">
        insert  (
        USER_ID,UPDATE_TIME,REMARK,TYPE
        )
        values (
        #{userId,jdbcType=VARCHAR},#{updateTime,jdbcType=TIMESTAMP},#{remark,jdbcType=VARCHAR},#{type,jdbcType=INTEGER}
        )
        ON duplicate KEY UPDATE
        <set>
            <if test="userId != null">
                USER_ID =#{userId,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME =#{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                REMARK =#{remark,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                TYPE =#{type,jdbcType=INTEGER},
            </if>
        </set>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="cn.com.xgit.parts.auth.account.dao.entity.sys.SysOpLogDO">
        update SYS_OP_LOG
        <set>
            <if test="userId != null">
                USER_ID =#{userId,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME =#{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                REMARK =#{remark,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                TYPE =#{type,jdbcType=INTEGER},
            </if>
        </set>
        where ID =  #{id,jdbcType=VARCHAR}
    </update>
</mapper>
